--For ubuntu--
1-Java, Maven, Tomcat and Jenkins
$ mkdir tools
$ cd tools
$ sudo apt-get update
-Java
$ sudo apt install openjdk-11-jdk git
$ java -version
-Maven
$ wget https://downloads.apache.org/maven/maven-3/3.6.3/binaries/apache-maven-3.6.3-bin.zip
$ unzip apache-maven-3.6.3-bin.zip
$ sudo ln -s /home/stagiaire/tools/apache-maven-3.6.3/bin/mvn /usr/bin/mvn
$ mvn --version
$ wget https://downloads.apache.org/tomcat/tomcat-9/v9.0.36/bin/apache-tomcat-9.0.36-windows-x64.zip
$ unzip apache-tomcat-9.0.36-windows-x64.zip
-Jenkins
$ wget http://mirrors.jenkins.io/war-stable/latest/jenkins.war
$ cp /home/stagiaire/tools/jenkins.war /home/stagiaire/tools/apache-tomcat-9.0.36/webapps/
$ cd apache-tomcat-9.0.36/bin/
$ chmod a+x startup.sh 
 $ chmod a+x catalina.sh 
 $ ./startup.sh 
 -->http://localhost:8080/jenkins
 
--For centos--
1-Java, Maven, Tomcat and Jenkins
$ mkdir tools
$ cd tools
$ sudo yum search java-11
$ sudo yum install  ava-11-openjdk.x86_64 java-11-openjdk-devel.x86_64
$ export JAVA_HOME=/usr/lib/jvm/java-11-openjdk
$ export PATH=$PATH:$JAVA_HOME/bin
or edit .bashrc et ajouter les deux commandes export puis lancer $ source .bashrc
$ wget http://mirrors.jenkins.io/war-stable/latest/jenkins.war
$ wget https://downloads.apache.org/maven/maven-3/3.6.3/binaries/apache-maven-3.6.3-bin.zip
$ wget https://downloads.apache.org/tomcat/tomcat-9/v9.0.36/bin/apache-tomcat-9.0.36-windows-x64.zip
$ unzip apache-maven-3.6.3-bin.zip 
$ cd apache-maven-3.6.3/bin/
$ ./mvn --help
$ unzip apache-tomcat-9.0.36-windows-x64.zip 
$ cp /home/stagiaire/tools/jenkins.war /home/stagiaire/tools/apache-tomcat-9.0.36/webapps/
$ cd apache-tomcat-9.0.36/bin/
$ chmod a+x startup.sh 
 $ chmod a+x catalina.sh 
 $ ./startup.sh 
 -->http://localhost:8080/jenkins
 -->Maven Goals :
$ git clone https://github.com/walidsaad/training-app-demo.git
$ sudo ln -s /home/stagiaire/tools/apache-maven-3.6.3/bin/mvn /usr/bin/mvn
$ cd training-app-demo.git
$ mvn compile
$ mvn test
$ mvn package

2-Nexus
https://help.sonatype.com/repomanager3/download
$ cd tools/
$ mv /home/stagiaire/Téléchargements/nexus-3.24.0-02-unix.tar.gz .
$ tar -zxvf nexus-3.24.0-02-unix.tar.gz 
$ cd nexus-3.24.0-02/bin/
$ ./nexus run
-JAVA_HOME
$ gedit ~/.bashrc
-->Ajouter les lignes suivantes et sauvegarder
JAVA_HOME=/usr/lib/jvm/java-11-openjdk-amd64
ecport JAVA_HOME
export PATH=$PATH:$JAVA_HOME/bin
$ source ~/.bashrc
--If Problem with JDK on Ubuntu
$ sudo apt install openjdk-8-jdk
Editer le fichier nexus et modifier la variable d'envt 
INSTALL4J_JAVA_HOME_OVERRIDE=/usr/lib/jvm/java-8-openjdk-amd64/
$gedit ./bin/nexus

-------------------------------------------------

Started Sonatype Nexus OSS 3.24.0-02

-------------------------------------------------
-->http://localhost:8081/

3-SonarQube
-SonarQube (using h2 database by default, only for default)
https://docs.sonarqube.org/latest/setup/install-server/
$ sudo alternatives --config java
[sudo] Mot de passe de stagiaire : 

Il existe 3 programmes qui fournissent « java ».

  Sélection    Commande
-----------------------------------------------
   1           java-1.7.0-openjdk.x86_64 (/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.261-2.6.22.2.el7_8.x86_64/jre/bin/java)
*+ 2           java-1.8.0-openjdk.x86_64 (/usr/lib/jvm/java-1.8.0-openjdk-1.8.0.252.b09-2.el7_8.x86_64/jre/bin/java)
   3           java-11-openjdk.x86_64 (/usr/lib/jvm/java-11-openjdk-11.0.7.10-4.el7_8.x86_64/bin/java)

Entrez pour garder la sélection courante [+] ou saisissez le numéro de type de sélection :3
$ java -version
openjdk version "11.0.7" 2020-04-14 LTS
OpenJDK Runtime Environment 18.9 (build 11.0.7+10-LTS)
OpenJDK 64-Bit Server VM 18.9 (build 11.0.7+10-LTS, mixed mode, sharing)
sudo sysctl -w vm.max_map_count=262144
sudo sysctl -w fs.file-max=65536
$ cd tools
$ cp /home/stagiaire/Téléchargements/sonarqube-8.3.1.34397.zip .
$ unzip sonarqube-8.3.1.34397.zip 
$ cd sonarqube-8.3.1.34397/
$ cat conf/sonar.properties
sonar.web.javaOpts=-Xmx768m -Xms128m -XX:+HeapDumpOnOutOfMemoryError

$ sudo cat /etc/systemd/system/sonarqube.service
[Unit]
Description=SonarQube service
After=syslog.target network.target

[Service]
Type=simple
User=stagiaire
#Group=sonarqube
#PermissionsStartOnly=true
ExecStart=/bin/nohup /usr/bin/java -Xms32m -Xmx32m -Djava.net.preferIPv4Stack=true -jar /home/stagiaire/tools/sonarqube-8.3.1.34397/lib/sonar-application-8.3.1.34397.jar
StandardOutput=syslog
LimitNOFILE=65536
LimitNPROC=8192
TimeoutStartSec=5
Restart=always
SuccessExitStatus=143

[Install]
WantedBy=multi-user.target

$ sudo systemctl enable sonarqube.service
$ sudo systemctl start sonarqube.service

-->http://localhost:9000/




--Install vscode--
$ sudo rpm --import https://packages.microsoft.com/keys/microsoft.asc
$ sudo sh -c 'echo -e "[code]\nname=Visual Studio Code\nbaseurl=https://packages.microsoft.com/yumrepos/vscode\nenabled=1\ngpgcheck=1\ngpgkey=https://packages.microsoft.com/keys/microsoft.asc" > /etc/yum.repos.d/vscode.repo'
$ sudo yum check-update && sudo yum install code
